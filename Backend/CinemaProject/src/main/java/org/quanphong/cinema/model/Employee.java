package org.quanphong.cinema.model;
// Generated Dec 12, 2017 1:20:26 AM by Hibernate Tools 5.1.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "cinema", uniqueConstraints = { @UniqueConstraint(columnNames = "Code"),
		@UniqueConstraint(columnNames = "phoneNumber"), @UniqueConstraint(columnNames = "userName") })
public class Employee implements java.io.Serializable {

	private Integer id;
	private String code;
	private String firstName;
	private String lastName;
	private Date dob;
	private String address;
	private String phoneNumber;
	private String email;
	private String userName;
	private String password;
	private String role;
	private int status;
	private Set<New> newses = new HashSet<New>(0);
	private Set<Order> orderses = new HashSet<Order>(0);

	public Employee() {
	}

	public Employee(String code, String firstName, String lastName, Date dob, String address, String phoneNumber,
			String email, String userName, String password, String role, int status) {
		this.code = code;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dob = dob;
		this.address = address;
		this.phoneNumber = phoneNumber;
		this.email = email;
		this.userName = userName;
		this.password = password;
		this.role = role;
		this.status = status;
	}

	public Employee(String code, String firstName, String lastName, Date dob, String address, String phoneNumber,
			String email, String userName, String password, String role, int status, Set<New> newses,
			Set<Order> orderses) {
		this.code = code;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dob = dob;
		this.address = address;
		this.phoneNumber = phoneNumber;
		this.email = email;
		this.userName = userName;
		this.password = password;
		this.role = role;
		this.status = status;
		this.newses = newses;
		this.orderses = orderses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "Code", unique = true, nullable = false, length = 10)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "firstName", nullable = false, length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOB", nullable = false, length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "Address", nullable = false, length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phoneNumber", unique = true, nullable = false, length = 15)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "Email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "userName", unique = true, nullable = false, length = 30)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Password", nullable = false, length = 30)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Role", nullable = false, length = 10)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "Status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@OneToMany(mappedBy = "employees")
	public Set<New> getNewses() {
		return this.newses;
	}

	public void setNewses(Set<New> newses) {
		this.newses = newses;
	}

	@OneToMany(mappedBy = "employees")
	public Set<Order> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Order> orderses) {
		this.orderses = orderses;
	}

	public Employee(Integer id, String code, String firstName, String lastName, Date dob, String address,
			String phoneNumber, String email, String userName, String password, String role, int status) {
		super();
		this.id = id;
		this.code = code;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dob = dob;
		this.address = address;
		this.phoneNumber = phoneNumber;
		this.email = email;
		this.userName = userName;
		this.password = password;
		this.role = role;
		this.status = status;
	}

	public boolean equals(Employee employee) {
		boolean ok = true;
		if (this.code != employee.getCode()) ok = false;
		if (this.firstName != employee.getFirstName()) ok = false;
		if (this.lastName != employee.getLastName()) ok = false;
		if (this.phoneNumber != employee.getPhoneNumber()) ok = false;
		if (this.address != employee.getAddress()) ok = false;
		if (this.email != employee.getEmail()) ok = false;
		if (this.userName != employee.getUserName()) ok = false;
		if (this.password != employee.getPassword()) ok = false;
		if (this.role != employee.getRole()) ok = false;
		if (this.status != employee.getStatus()) ok = false;
		
		return ok;
	}
	
	
	
	
	

}
